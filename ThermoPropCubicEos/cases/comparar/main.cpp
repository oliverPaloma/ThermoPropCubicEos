#include "../../ThermoPropCubicEos.hpp"

int main() {
auto T = 380.; // Isoterma com temperatura constante

auto databasePath = "/home/paloma/Documentos/ThermoPropCubicEos/database/test.yml";

//auto components = "CO2 C1"; // Componentes
std::vector<double> Tc, Pc, omega;
auto components = "N2 CO2 C1 C2 C3 IC4 NC4 IC5 NC5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 C20";
std::vector<double> z{0.001200, 0.024900, 0.764300, 0.074600, 0.031200, 0.005900, 0.012100, 0.005000, 0.005900, 0.007900, 0.009500, 0.010800, 0.007800, 0.005920, 0.004670, 0.003450, 0.003750, 0.003040, 0.002370, 0.002080, 0.002200, 0.001690, 0.001400, 0.008330};
auto EoSModel = CubicEOSModel::PengRobinson; // PR escolhido
// auto EoSModel = CubicEOSModel::VanDerWaals; // vdW escolhido
 //auto EoSModel = CubicEOSModel::SoaveRedlichKwong;  //srk escolhido

//std::vector<double> z{0.5,0.5}; // Fração molar para mistura
//std::vector<double> z{0.95,0.05}; //95% CO2
//std::vector<double> z{0.05,0.95}; 
auto ncomp=z.size();
read_database(Tc, Pc, omega, databasePath, components);
//srk 350 co2
std::vector<double> V = {0.0306419156 ,0.0120991491 ,0.0075020071 ,0.0054222402 ,0.0042380810 ,0.0034741634 ,0.0029408196 ,0.0025475287 ,0.0022456379 ,0.0020066738 ,0.0018128674 ,0.0016525582 ,0.0015177784 ,0.0014028991 ,0.0013038313 ,0.0012175332 ,0.0011416954 ,0.0010745332 ,0.0010146456 ,0.0009609174 ,0.0009124502 ,0.0008685118 ,0.0008285000 ,0.0007919143 ,0.0007583362 ,0.0007274122 ,0.0006988421 ,0.0006723696 ,0.0006477739 ,0.0006248642 ,0.0006034748 ,0.0005834609 ,0.0005646955 ,0.0005470667 ,0.0005304758 ,0.0005148348 ,0.0005000658 ,0.0004860988 ,0.0004728714 ,0.0004603272 ,0.0004484156 ,0.0004370908 ,0.0004263114 ,0.0004160396 ,0.0004062412 ,0.0003968848 ,0.0003879420 ,0.0003793865 ,0.0003711943 ,0.0003633433 ,0.0003558133 ,0.0003485855 ,0.0003416425 ,0.0003349683 ,0.0003285481 ,0.0003223682 ,0.0003164156 ,0.0003106786 ,0.0003051460 ,0.0002998074 ,0.0002946532 ,0.0002896743 ,0.0002848624 ,0.0002802094 ,0.0002757080 ,0.0002713512 ,0.0002671323 ,0.0002630453 ,0.0002590843 ,0.0002552438 ,0.0002515187 ,0.0002479041 ,0.0002443954 ,0.0002409883 ,0.0002376785 ,0.0002344623 ,0.0002313358 ,0.0002282957 ,0.0002253385 ,0.0002224611 ,0.0002196605 ,0.0002169338 ,0.0002142784 ,0.0002116915 ,0.0002091708 ,0.0002067138 ,0.0002043185 ,0.0002019825 ,0.0001997039 ,0.0001974806 ,0.0001953109 ,0.0001931930 ,0.0001911251 ,0.0001891055 ,0.0001871328 ,0.0001852055 ,0.0001833220 ,0.0001814810 ,0.0001796811 ,0.0001779212};

/*
if (V.size() != 100) {
    std::cerr << "Erro: O vetor V deve conter exatamente 100 valores.\\n";
    return 1;
}
*/
calculateIsotermaComp(EoSModel, Tc, Pc, omega, T, V, z, ncomp); //utiliza regra de mistura
return 0;
}
/**/
