#include "../../ThermoPropCubicEos.hpp"

int main() {
auto T = 350.; // Isoterma com temperatura constante
auto databasePath = "/home/palomajo/Documentos/ThermoPropCubicEos/database/test.yml";
auto components = "CO2"; // Componentes
std::vector<double> Tc, Pc, omega;

//auto EoSModel = CubicEOSModel::PengRobinson; // PR escolhido
  //auto EoSModel = CubicEOSModel::VanDerWaals; // vdW escolhido
  auto EoSModel = CubicEOSModel::SoaveRedlichKwong;  //srk escolhido

std::vector<double> z{1.}; // Fração molar para mistura
auto ncomp=z.size();

read_database(Tc, Pc, omega, databasePath, components);
//srk 350 co2
std::vector<double> V = {0.02901766, 0.01153368, 0.00717359, 0.00519311, 0.00406175, 0.0033298, 0.00281747, 0.00243879, 0.00214749, 0.00191644, 0.00172869, 0.00157311, 0.00144207, 0.00133019, 0.00123355, 0.00114923, 0.00107501, 0.00100917, 0.00095038, 0.00089754, 0.00084981, 0.00080646, 0.00076693, 0.00073072, 0.00069744, 0.00066674, 0.00063833, 0.00061196, 0.00058742, 0.00056452, 0.00054311, 0.00052303, 0.00050418, 0.00048644, 0.00046971, 0.00045391, 0.00043896, 0.0004248, 0.00041137, 0.0003986, 0.00038645, 0.00037488, 0.00036385, 0.00035331, 0.00034324, 0.00033361, 0.00032438, 0.00031554, 0.00030705, 0.00029891, 0.00029108, 0.00028355, 0.0002763, 0.00026933, 0.0002626, 0.00025612, 0.00024986, 0.00024383, 0.00023799, 0.00023236, 0.00022692, 0.00022165, 0.00021656, 0.00021163, 0.00020686, 0.00020224, 0.00019777, 0.00019343, 0.00018924, 0.00018517, 0.00018124, 0.00017742, 0.00017373, 0.00017014, 0.00016668, 0.00016332, 0.00016007, 0.00015692, 0.00015387, 0.00015092, 0.00014807, 0.00014531, 0.00014265, 0.00014007, 0.00013758, 0.00013518, 0.00013286, 0.00013062, 0.00012846, 0.00012637, 0.00012436, 0.00012243, 0.00012056, 0.00011877, 0.00011704, 0.00011537, 0.00011376, 0.00011222, 0.00011073, 0.00010929};

/*
if (V.size() != 100) {
    std::cerr << "Erro: O vetor V deve conter exatamente 100 valores.\\n";
    return 1;
}
*/

//50 primeiros
//std::vector<double> V = {0.0248788,0.00989271,0.0061557,0.00445835,0.00348883,0.00286167,0.00242274,0.00209838,0.00184892,0.0016511,0.00149041,0.00135728,0.0012452,0.00114955,0.00106695,0.00099492,0.00093155,0.00087537,0.00082523,0.0007802,0.00073955,0.00070266,0.00066904,0.00063828,0.00061002,0.00058398,0.00055991,0.00053759,0.00051684,0.0004975,0.00047944,0.00046253,0.00044667,0.00043176,0.00041773,0.0004045,0.000392,0.00038017,0.00036898,0.00035835,0.00034827,0.00033867,0.00032955,0.00032085,0.00031255,0.00030463,0.00029706,0.00028982,0.00028289,0.00027625};

//50 ultimos
//std::vector<double> V = {0.00026989,0.00026378,0.00025792,0.00025228,0.00024687,0.00024166,0.00023665,0.00023182,0.00022717,0.00022269,0.00021837,0.0002142,0.00021017,0.00020629,0.00020253,0.0001989,0.00019539,0.00019199,0.00018871,0.00018553,0.00018245,0.00017947,0.00017658,0.00017378,0.00017107,0.00016844,0.00016588,0.00016341,0.000161,0.00015867,0.00015641,0.00015421,0.00015207,0.00015,0.00014798,0.00014602,0.00014411,0.00014226,0.00014045,0.0001387,0.00013699,0.00013533,0.00013372,0.00013214,0.00013061,0.00012912,0.00012766,0.00012625,0.00012486,0.00012352};

// apartir do sugerido:
//std::vector<double> V = {0.00023182, 0.00022717, 0.00022269, 0.00021837, 0.0002142, 0.00021017, 0.00020629, 0.00020253, 0.0001989, 0.00019539, 0.00019199, 0.00018871, 0.00018553, 0.00018245, 0.00017947, 0.00017658, 0.00017378, 0.00017107, 0.00016844, 0.00016588, 0.00016341, 0.000161, 0.00015867, 0.00015641, 0.00015421, 0.00015207, 0.00015, 0.00014798, 0.00014602, 0.00014411, 0.00014226, 0.00014045, 0.0001387, 0.00013699, 0.00013533, 0.00013372, 0.00013214, 0.00013061, 0.00012912, 0.00012766, 0.00012625, 0.00012486, 0.00012352};

//v para 200k e vdw
//std::vector<double> V = {1.64868611e-02, 6.49512304e-03, 4.00271151e-03, 2.87003302e-03, 2.22252383e-03, 1.80320034e-03, 1.50931809e-03, 1.29175127e-03, 1.12405041e-03, 9.75103568e-04, 8.54243393e-04, 7.57089382e-04, 6.77214925e-04, 6.10315318e-04, 5.53397129e-04, 5.04312331e-04, 4.61477240e-04, 4.23695731e-04, 3.90043780e-04, 3.59791106e-04, 3.32345380e-04, 3.07209247e-04, 2.83941429e-04, 2.62108921e-04, 2.41195802e-04, 2.20333180e-04, 1.97220625e-04, 1.67356205e-04, 1.33969014e-04, 9.96615738e-05, 6.31410564e-05, 5.75418675e-05, 5.70464444e-05, 5.65857070e-05, 5.61550533e-05, 5.57507588e-05, 5.53697637e-05, 5.50095213e-05, 5.46678882e-05, 5.43430421e-05, 5.40334201e-05, 5.37376708e-05, 5.34546178e-05, 5.31832302e-05, 5.29225991e-05, 5.26719191e-05, 5.24304732e-05, 5.21976196e-05, 5.19727820e-05, 5.17554407e-05, 5.15451252e-05, 5.13414085e-05, 5.11439015e-05, 5.09522488e-05, 5.07661247e-05, 5.05852302e-05, 5.04092901e-05, 5.02380502e-05, 5.00712757e-05, 4.99087489e-05, 4.97502676e-05, 4.95956439e-05, 4.94447027e-05, 4.92972803e-05, 4.91532241e-05, 4.90123908e-05, 4.88746464e-05, 4.87398649e-05, 4.86079279e-05, 4.84787240e-05, 4.83521479e-05, 4.82281008e-05, 4.81064889e-05, 4.79872236e-05, 4.78702212e-05, 4.77554022e-05, 4.76426914e-05, 4.75320171e-05, 4.74233115e-05, 4.73165099e-05, 4.72115508e-05, 4.71083756e-05, 4.70069284e-05, 4.69071560e-05, 4.68090075e-05, 4.67124342e-05, 4.66173897e-05, 4.65238296e-05, 4.64317111e-05, 4.63409936e-05, 4.62516380e-05, 4.61636068e-05, 4.60768639e-05, 4.59913750e-05, 4.59071067e-05, 4.58240272e-05, 4.57421058e-05, 4.56613130e-05, 4.55816203e-05, 4.55030005e-05};


calculateIsotermaComp(EoSModel, Tc, Pc, omega, T, V, z, ncomp);

return 0;
}
/**/
